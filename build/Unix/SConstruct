import sys

#Release environment
release_env = Environment(CC = 'clang', 
                  CCFLAGS = '-O2 -fomit-frame-pointer -W -Wall -Wextra'
		 )

#Profile environment
profile_env = Environment(CC = 'gcc -std=c99',
		  CCFLAGS = '-pg -O2 -W -Wall -Wextra',
		  LINKFLAGS = '-pg'
                 )

#Debug environment
debug_env = Environment(CC = 'gcc -std=c99',
		  CCFLAGS = '-g -W -Wall -Wextra'
		  )

env = Environment()

debug = ARGUMENTS.get('debug',0)
prof  = ARGUMENTS.get('prof',0)

if int(debug):
	env = debug_env
elif int(prof):
	env = profile_env
else:
	env = release_env 


env.Append(CPPPATH = ['/usr/include/SDL'])
env.Append(CPPPATH = ['/usr/local/include/SDL'])
env.Append(LIBS = ['SDL','SDL_net'])
env.Append(LINKFLAGS = '')

#SDL for OSX uses Cocoa
if sys.platform == 'darwin':
	env.AppendUnique(FRAMEWORKS = ['Cocoa'])

sourceObjs = env.Object( Glob('../../src/core/*.c'))\
           + env.Object( Glob('../../src/core/mmu/*.c'))\
           + env.Object( Glob('../../src/shared_libs/SDL/*.c'))\
           + env.Object( Glob('../../src/platforms/standard/*.c'))\
           + env.Object( Glob('../../src/shared_libs/SDL/*.cpp'))\
           + env.Object( Glob('../../src/shared_libs/SDL/audio/*.cpp'))

#OSX needs to link SDLmain.m to be able to work with SDL
#if sys.platform == 'darwin':
#	sourceObjs += env.Object( Glob('../../src/shared_libs/SDL/OSX/*.m'))

env.Program('gb_emu',sourceObjs)
